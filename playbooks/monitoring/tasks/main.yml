---
- name: Gather facts about the host
  setup:

- name: Replace server_ip in configuration
    replace:
      path: /home/jenkins/iProlepsisMonitoring/playbooks/monitoring/files/otel-collector-config.yaml
    regexp: '{{ server_ip }}'
    replace: '{{ ansible_host }}'
      delegate_to: localhost

- name: Print the IP address of the current machine
  debug:
    msg: "Current IP address: {{ ansible_default_ipv4.address }}"

# if the above cloning works the scp before this, in the jenkinsfile, is unecessary, but i removed this for now
#- name: Clone monitoring repository
#  git:
    #repo: "https://github.com/iprolepsis-project-eu/monitoring.git"
#    repo: "https://github.com/RodrigoDBraga/AnsibleTest"
#    dest: /opt/monitoring
#if the above cloning works the scp before this, in the jenkinsfile, is unecessary

- name: Start monitoring services
  shell: docker compose -f/home/jenkins/iProlepsisMonitoring/playbooks/monitoring/files/docker-compose-client-monitor.yml up -d
  #shell: docker-compose -f/opt/monitoring/playbooks/monitoring/files/docker-compose-client-monitor.yml up -d
  become: yes

- name: Print Monitoring Service Start Success
  debug:
    msg: "Monitoring services started successfully."

#- name: Create environment file for Docker Compose
#  copy:
#    content: |
 #     SERVER_IP={{ server_ip }}
#      SERVER_NAME={{ server_name }}
  #  dest: /opt/monitoring/.env
   # owner: root
   # group: root
   # mode: '0644'

#- name: Start monitoring services with Docker Compose
#  command: docker-compose up -d
#  args:
#    chdir: /opt/monitoring



#- name: Display Docker Compose configuration
#  command: cat /opt/monitoring/docker-compose.yml

#- name: Start monitoring services with Docker Compose
  #command: docker-compose up #--verbose
 # args:
#    chdir: /opt/monitoring
  #register: docker_compose_output
#  ignore_errors: yes

#- name: Print Docker Compose output
#  debug:
#    var: docker_compose_output


# these were the first 2 tasks done before
#- name: Ensure Docker service is running new
#  shell: docker ps
#  #ignore_errors: yes
#  register: docker_running
  #changed_when: false

#- name: Ensure Docker service is running
#  service:
#    name: docker
#    state: started
#    enabled: yes
#  become: yes

#- name: Update and deploy monitoring configuration
#  template:
#    src: otel-collector-config.yaml.j2
#    #dest: "{{ playbook_dir }}/client/configs/otel-collector-config.yaml"
#    dest: "/var/jenkins_home/workspace/Private_github_test/client/configs/otel-collector-config.yaml"


#- name: Restart monitoring service
  #shell: docker-compose -f {{ playbook_dir }}/client/configs/docker-compose-client-monitor.yml up -d
#  shell: docker-compose -f /var/jenkins_home/workspace/Private_github_test/client/configs/docker-compose-client-monitor.yml up -d
---
#
#- name: Ensure sudo is installed
#  become: yes
#  apt:
#    name: sudo
#    state: present
  
- name: Check if sudo is installed
  command: which sudo
  register: sudo_check
  ignore_errors: true

- name: Check if user is a member of the sudo group
  command: groups {{ ansible_user }}
  register: group_check

- name: Extract sudo group membership
  set_fact:
    user_in_sudo: "{{ 'sudo' in group_check.stdout.split() }}"

- name: Temporarily add user to sudo group
  user:
    name: "{{ ansible_user }}"
    groups: sudo
    append: yes
  when: not user_in_sudo

- name: Check if sudo is installed
  command: which sudo
  register: sudo_check
  ignore_errors: true

- name: Install sudo if it's not installed
  apt:
    name: sudo
    state: present
  when: sudo_check.rc != 0


- name: Ensure python3-apt is installed
  become: yes
  apt:
    name: python3-apt
    state: present
  

- name: Update apt and install prerequisites
  #become: yes
  apt:
    update_cache: yes
    name: "{{ item }}"
    state: present
  with_items:
    - git
    - docker.io
    - docker-compose
  
- name: Restore original sudo group membership
  user:
    name: "{{ ansible_user }}"
    groups: "{{ original_groups.stdout }}"
  when: not user_in_sudo

- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Clone monitoring repository
  git:
    #repo: "https://github.com/iprolepsis-project-eu/monitoring.git"
    repo: "https://github.com/RodrigoDBraga/AnsibleTest"
    dest: /opt/monitoring

- name: Create environment file for Docker Compose
  copy:
    content: |
      SERVER_IP={{ server_ip }}
      SERVER_NAME={{ server_name }}
    dest: /opt/monitoring/.env
    owner: root
    group: root
    mode: '0644'

- name: Start monitoring services with Docker Compose
  command: docker-compose up -d
  args:
    chdir: /opt/monitoring
